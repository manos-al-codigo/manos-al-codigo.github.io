[{"uri":"https://manos-al-codigo.github.io/ejemplos/adivinar-numero/","title":"Adivinar número","tags":[],"description":"","content":"Este pequeño juego trata de adivinar el número del 1 al 10 que el gato está pensando. Uno puede insertar un número y el gato le dirá si su número es más grande o más pequeño que el que él está pensando. Finalmente, una vez que se adivina el número el gato le dirá cuantos intentos le tomó hacerlo.\nCódigo completo   Explicación El proceso de realización de este programa está en orden. Para realizar un programa similar, basta con seguir estos pasos en orden.\nInicialización de variables   Primeramente, iniciamos las variables que vamos a usar valorOriginal e intentos.\n¿Qué hacen estas variables?\n valorOriginal: El número al azar del 1 al 10 que el gato está pensando. intentos: El número de intentos. Cómo todavía no hemos empezado, esto tiene que valer 0.  Repetir hasta adivinar   El resto del código está adentro de este bloque de repetición. Ya que el punto del juego es de adivinar el número que está pensando el gato, el momento que nosotros adivinemos, es decir adivinado es igual a valorOriginal, entonces habremos terminado el juego.\n La variable adivinado almacena el número que estamos insertando para adivinar. Esta variable no necesitaba un valor inicial y por eso no lo inicializamos previamente.\n Preguntar el número al jugador   Primeramente, tenemos que aumentar el número de intentos ya que al adivinar el número estamos realizando un intento.\nLuego, preguntamos al jugador qué número desea insertar para adivinar y esta respuesta la guarda a la variable adivinado. Cabe recordar que esta variable se ocupa de guardar el número adivinado y es esta variable que debemos comparar con el número del gato para saber si hemos adivinado o no. Esta comparación se realiza en la condición del bloque de repetición.\nResponder si el número se adivinó   Después de haber preguntado al jugador qué número desea insertar, queremos hacer que el gato responda con un mensaje como ¡Adivinaste! si es que sí se adivinó el número.\nUtilizamos un bloque de Si entonces Si No y la condición que veremos verificar es si adivinado es igual a valorOriginal.\nSi es que la condición es verdadera, enviamos el mensaje de ¡Adivinaste!.\nEl mensaje está estructurado como: ¡Adivinaste! Te tomó intentos intentos.\nBasta reemplazar intentos con el valor que está guardado en la variable intentos. Para esto tenemos que usar el operador de Unir texto.\nResponder si el número no se adivinó   Si la condición mencionada antes es falsa, es decir, que adivinado no es igual a valorOriginal, queremos que el gato dé una respuesta para ayudar al jugador a adivinar el número. Es decir, si es que el número adivinado es más grande que valorOriginal, le diremos al jugador que el número que el gato está pensando es más pequeño, si es que el número adivinado es más pequeño que valorOriginal, le diremos que el número que está pensando el gato es más grande.\nPara hacer esto, insertamos un bloque de Si para verificar si adivinado es más pequeño que valorOriginal. Si se da esto, se le dice al jugador el siguiente mensaje:\nMi número es más grande que adivinado, donde adivinado corresponde al número que el jugador insertó.\nLuego, hacemos lo mismo para el caso de que el número adivinado sea más grande que el número del gato. Insertamos otro bloque Si a continuación para verificar el caso contrario, es decir, si es que adivinado es más grande que valorOriginal. Si se da esto, se le dice al jugador el siguiente mensaje:\nMi número es más pequeño que adivinado, donde adivinado corresponde al número que el jugador insertó.\nCorriendo el programa   El gato pregunta el número a adivinar.     Si el número es muy pequeño, el gato dice que su número es más grande.     Si el número es muy grande, el gato dice que su número es más pequeño.     Cuando adivinas el número, el gato te felicita.     Archivos Adjuntos   Adivinar-Numero.sb3     "},{"uri":"https://manos-al-codigo.github.io/explorar/aprender-mas/","title":"Aprender más","tags":[],"description":"","content":"   Contenido En los videos anteriores aprendimos varias de las cosas que podemos hacer con Scratch, pero hubo algunos bloques que no pudimos utilizar, como los de sonido o los especiales que te dejan crear tus propios bloques. Les dejo que jueguen con ellos para que vean cómo funcionan.\nAdemás, para que el curso sea más fácil, estuvimos programando solo a un objeto a la vez. Pero con Scratch, es posible tener varios objetos en pantalla que sigan sus propias instrucciones. Si les gustó Scratch, les invito a que revisen todo lo que pueden hacer, ya que la curiosidad es la mejor fuente de ánimo para aprender.\nSi tienen dudas de qué pueden hacer con Scratch, diríjanse a la sección de Ideas, en donde pueden encontrar instrucciones a seguir para crear proyectos como juegos o animaciones. Y si se sienten aún más curiosos, vayan a la sección de Explorar, escojan un proyecto que les interese, y hagan clic en Ver Dentro para observar cómo fue programado ese proyecto.\nComo se los mencioné antes, Scratch es un lenguaje de programación como cualquier otro. Programar con bloques puede ayudar a visualizar lo que hacemos y simplifica el proceso de la programación bastante. Esto es muy útil cuando queremos aprender a programar. Pero ¿Cómo debería continuar para aprender aún más sobre la programación?\nSi les gustó la programación y quieren aprender a utilizar cosas mucho más completas y poderosas, les invito a que investiguen sobre Python. Python es un lenguaje de programación bastante popular y muy fácil de aprender. Escribir código en Python se parece mucho a escribir las instrucciones al computador en inglés, por lo que resulta ser bastante atractivo para quienes están aprendiendo a programar, sean grandes o pequeños.\nPara el aprendizaje de Python les recomiendo sitios web como Codecademy y FreeCodeCamp, donde pueden encontrar cursos más prácticos que les enseñarán los básicos del lenguaje a través de ejercicios simples de seguir.\nEspero que hayan gustado del curso de Scratch y haya hecho que se interesen por la programación, aunque sea un poquito. Recuerden que la programación nos permite aprovechar de nuestras computadoras y sin ella no tendríamos nada de la tecnología que tenemos hoy en día.\n  Archivos Adjuntos   Aprender Mas.pdf    Aprender Mas.pptx     "},{"uri":"https://manos-al-codigo.github.io/introduccion/","title":"Introducción","tags":[],"description":"","content":"Introducción Esta sección es una introducción al curso con conceptos básicos de la computación y seguridad en el Internet. Los videos mostrados en cada página se encuentran en esta lista de reproducción de YouTube.\nContenido de esta sección  ¿Qué es la computación?   Peligros del Internet   "},{"uri":"https://manos-al-codigo.github.io/introduccion/que-es-la-computacion/","title":"¿Qué es la computación?","tags":[],"description":"","content":"   Contenido La computación es la ciencia de las computadoras y estudia su funcionamiento desde lo más adentro hasta lo más de afuera.\nLas computadoras de antes nunca fueron tan avanzadas como las que tenemos actualmente, antes ni si quiera tenían pantallas o ratones, tampoco tenían acceso al Internet y uno mismo tenía que programarlas para que puedan servir de algo.\nPero conforme fueron pasando los años, las computadoras se volvieron cada vez más populares, y la gente las compraba cada vez más porque su precio era más barato. Estas máquinas se volvieron más y más poderosas para permitirnos usarlas para navegar en Internet, ver videos en YouTube y Netflix, consultar el Facebook, jugar videojuegos y muchas cosas más.\nTodo lo que conocemos como programas o aplicaciones ya sean en las computadoras o teléfonos, es fruto de la programación.\nLa programación es el proceso de escribir una serie de instrucciones en un lenguaje que la computadora pueda entender. Los ingenieros en computación son los que se ocupan de realizar esto, escriben un programa que la computadora pueda entender, ella procesa esta información y nos presenta un resultado en la pantalla.\nAprender a programar es sumamente importante hoy en día ya que todo a nuestro alrededor proviene de la computación: las computadoras, los teléfonos, los televisores, todo lo que sea electrónico pasó por una etapa de programación.\nAdemás, conocer bien cómo funcionan las computadoras es importante porque conforme vayan pasando los años, nuestros electrónicos se volverán cada vez más importantes en nuestras vidas y todo lo que haremos, como trabajar o divertirnos, dependerá de un aparato electrónico.\nEn esta serie de videos encontrarán algunos conceptos que los ayudarán a entender más sobre lo que es la programación, a través de un lenguaje llamado Scratch con el cual podrán controlar y programar un gatito animado.\n  Archivos Adjuntos   Que es la computacion.pdf    Que es la computacion.pptx     "},{"uri":"https://manos-al-codigo.github.io/la-programacion/que-es-un-algoritmo/","title":"¿Qué es un algoritmo?","tags":[],"description":"","content":"   Contenido Un algoritmo es una serie de instrucciones que se deben de seguir en un orden particular. Por lo general se diseñan algoritmos para solucionar problemas, pero un algoritmo puede ser de cualquier tipo.\nSe suele pensar que un algoritmo tiene que estar lleno de matemáticas, pero esto no es del todo cierto. Uno no necesita ser buenísimo en matemáticas para crear un algoritmo. Por ejemplo, una receta de cocina es un algoritmo, aún si esta no necesita nada de matemáticas.\nA continuación, se encuentra un algoritmo para preparar un pastel de chocolate (Receta de Eva López en RecetasGratis.net).\n Precalentar el horno a 180°C. Batir 175 gramos de mantequilla en un bol hasta obtener crema suave. Agregar 150 gramos de azúcar y seguir batiendo. Agregar 4 huevos y seguir batiendo. Agregar 50 gramos de cacao en polvo, 200 gramos de harina, 25 gramos de maicena, 1 pizca de sal y 1 cucharadita de polvo para hornear, seguir batiendo. Mezclar la masa hasta que esté uniforme. Agregar pedazos de chocolate al interior de la masa. Insertar la masa en un molde engrasado con mantequilla e insertar en el horno durante 20 a 40 minutos, dependiendo del tipo de horno. Una vez horneado, dejar reposar 30 minutos para que se enfríe.  La receta de cocina es una serie de instrucciones que tienen que ser seguidas en su orden, si a la masa le ponemos la mantequilla después de hornear el pastel entonces no se obtendría lo que esperábamos. Es por esto por lo que es importante seguir las instrucciones al pie de la letra, lo mismo sucede para los algoritmos.\nAhora otro ejemplo de un algoritmo para reparar una lámpara que no enciende.\n Asegurarse que la lámpara esté conectada al enchufe, si no lo está entonces deberíamos enchufarla. Ver si el foco está quemado, reemplazar el foco de la lámpara y luego probar si funciona. Si todavía no se enciende entonces la lámpara está dañada y debemos enviarla a reparar o comprar una nueva.  La programación está llena de algoritmos. Cuando programamos le escribimos al computador una serie de instrucciones que la computadora pueda entender en el orden que tiene que seguir. Si sabemos como explicar paso a paso una instrucción entonces esta misma instrucción se la puede programar.\n  Archivos Adjuntos   Que es un algoritmo.pdf    Que es un algoritmo.pptx     "},{"uri":"https://manos-al-codigo.github.io/ejemplos/calculadora/","title":"Calculadora","tags":[],"description":"","content":"Este es un pequeño ejemplo de una calculadora que puede hacer las operaciones básicas de suma, resta, multiplicación y división entre solo dos números.\nCódigo completo   Explicación El proceso de realización de este programa está en orden. Para realizar un programa similar, basta con seguir estos pasos en orden.\nPreguntar por la operación a realizar   Al iniciar el programa damos la bienvenida al usuario con el mensaje: ¡Bienvenidos a mi calculadora!. Luego, el preguntamos al usuario qué operación desea realizar. Como siempre hemos hecho, el valor de la respuesta se la guarda en una variable, en este caso llamada operacion.\nVerificar si la operación es conocida   Luego, utilizamos el bloque Si entonces Si No porque queremos verificar que la operación sea conocida. La condición, que es un poco larga, está verificando si la variable operacion tiene alguno de los valores siguientes:\n +, para la suma. -, para la resta. *, para la multiplicación. /, para la división.  Esta condición se hace a través de varios operadores o Booleanos ya que queremos verificar que alguna de las igualdades sea verdadera. Basta con que una sea verdadera para que podamos ejecutar el código que se encuentra adentro de la parte de arriba.\nEn el caso de que la variable operacion no sea ninguno de los símbolos mencionados previamente, ejecutamos lo que se encuentra dentro del bloque Si No. Si llegamos a esto es porque la operación no es conocida. Por esto mandamos el mensaje No conozco esa operación. :(.\nYa que el código de los cálculos se encuentra dentro del bloque Si (porque solo podemos hacer los cálculos con una operación válida), podemos agregar otros bloques que se ejecutarán después de hacer los cálculos (o no) después del bloque Si entonces Si No. En este caso queremos despedirnos del usuario, por lo que enviamos el mensaje ¡Adiós! justo al final.\nPreguntar los números para hacer el cálculo   Una vez que hayamos verificado que la operación es correcta, le pedimos al usuario los números con los que vamos a realizar el cálculo.\nLe preguntamos al usuario por el número 1 y luego guardamos la respuesta en una variable llamada numero1.\nRepetimos esto para el número 2, se lo preguntamos al usuario y su respuesta se la guarda en una variable llamada numero2.\nMostrar la respuesta del cálculo   Teniéndo los números listos, procederemos a realizar el cálculo. El cálculo es distinto para cada operación, si pusimos + como operación estamos esperando hacer una suma. Para hacer esto vamos a utilizar 4 bloques Si y ejecutaremos cosas distintas dependiendo de qué valor tiene la operación.\n Si la operación es +, le responderemos al usuario que la respuesta es numero1 + numero2. Si la operación es -, le responderemos al usuario que la respuesta es numero1 - numero2. Si la operación es *, le responderemos al usuario que la respuesta es numero1 * numero2. Si la operación es /, le responderemos al usuario que la respuesta es numero1 / numero2.  Eso es todo, recuerden que se usa el operador de Unir texto para poder agregar el resultado del cálculo adentro del mensaje.\nCorriendo el programa   El gato pregunta qué operación se debe realizar.     Si no se inserta ninguna de las operaciones conocidas (\u0026#43;, -, *, /) entonces el gato dice que no conoce esa operación y el programa se termina.     Al preguntar la operación se deben insertar las operaciones conocidas (\u0026#43;, -, *, /). En este caso se insertó \u0026#43;.     El gato pregunta por el número 1. En este caso 2.     El gato pregunta por el número 2. En este caso también 2.     El gato responde con el resultado de la operación. En este caso, se realizó 2\u0026#43;2, y la respuesta es 4.     Archivos Adjuntos   Calculadora.sb3     "},{"uri":"https://manos-al-codigo.github.io/la-programacion/","title":"La Programación","tags":[],"description":"","content":"La Programación Esta sección contiene la parte principal del curso donde se encuentra el contenido para Scratch. Los videos mostrados en cada página se encuentran en esta lista de reproducción de YouTube.\nContenido de esta sección  ¿Qué es un algoritmo?   Scratch   Movimiento y apariencia   Eventos   Operadores   Variables y preguntas   Condicionales   Repetición   "},{"uri":"https://manos-al-codigo.github.io/introduccion/peligros-del-internet/","title":"Peligros del Internet","tags":[],"description":"","content":"   Contenido El Internet es una herramienta bastante útil que nos permite realizar muchísimas actividades de nuestro agrado. Con ella podemos jugar, ver videos, aprender, investigar e incluso hablar con nuestros amigos por texto o llamadas.\nPero, en el Internet nadie se conoce y esto es un problema porque esto significa que, en el Internet, la gente puede hacer lo que quiera sin que los otros puedan darse cuenta. Por esta razón, hay que tener mucho cuidado cuando se utiliza el Internet porque podrías encontrarte con extraños muy extraños.\nCuando usamos el Internet de forma irresponsable nuestras computadoras corren peligro de contaminarse con un virus. Los virus tienen muchas formas distintas, algunos se esconden en la computadora y secretamente van robando nuestra información, otros nos presentan anuncios en todo lado, y otros pueden hasta hacer que un computador deje de funcionar por completo.\nUna computadora puede contaminarse con un virus si es que:\n Accedemos constantemente a sitios desconocidos que sean manejados por personas con malas intenciones. Si hacemos clic en ciertos anuncios que aparecen en las páginas web. Si descargamos cualquier cosa de sitios que no sean conocidos.  Además, si usamos un buen antivirus y si evitamos realizar estas acciones podemos reducir el riesgo de que nuestro computador se dañe por un virus.\nPero en el Internet no solo nuestras computadoras corren peligro, nosotros como personas también.\nExisten ciertas herramientas que las personas mal intencionadas usan para robar nuestros datos y contaminar nuestras computadoras con virus.\n  El Spam: El Spam es el correo no deseado que recibimos en nuestro correo electrónico. Pueden contener anuncios que puedan parecer muy buenos para ser ciertos y muy seguramente son estafas para engañarnos y aprovecharse de nosotros.\n  Los sitios inapropiados: Algunos sitios web pueden ser diseñados por personas con malas intenciones para tratar de engañarnos, mostrar anuncios o contenido inapropiados. Además, estos sitios pueden tener como objetivo el robar nuestra información y dinero.\n  Algunas recomendaciones:\n Eviten visitar sitios web desconocidos, solo accedan a los que conozcan bien. Si un sitio web les pide habilitar Cookies, no lo hagan.  Hay que tener también bastante cuidado en las redes sociales. Si tienen un perfil en Facebook, Twitter, Instagram, Snapchat, YouTube o cualquier otro sitio sigan estos consejos:\n Nunca agreguen a gente desconocida en ninguna red social. Reduzcan la cantidad de publicaciones que puedan revelar su información. Eviten utilizar su información verdadera en su perfil. Traten de no revelar su nombre, su apellido, donde viven, quienes son sus familiares y eviten poner fotos de perfil que muestren su cara. Configuren su perfil para que solo sus amigos puedan verlo. Y recuerden, no porque hayas conversado con un extraño lo suficiente es que se convierte en tu amigo.  Esas fueron algunas de las recomendaciones para mantenerse seguros en el Internet, recuerden que el conocimiento es la mejor herramienta para estar seguros en cualquier lugar.\n  Archivos Adjuntos   Peligros del Internet.pdf    Peligros del Internet.pptx     "},{"uri":"https://manos-al-codigo.github.io/la-programacion/scratch/","title":"Scratch","tags":[],"description":"","content":"   Contenido Scratch es un lenguaje de programación diseñado por la Universidad MIT en Estados Unidos. Está hecho para hacer que los niños se interesen por la programación. Es un lenguaje bastante simple, no tiene nada de complicado, uno no tiene que estar escribiendo cosas, sino que se usan bloques.\nPrimeramente, cómo acceder a esto. Uno puede abrir Google, y buscar Scratch. Y de hecho el primer link usualmente va a ser el correcto. Los llevará a esta página web que es scratch.mit.edu.\nEn esta página tienen 3 botones que son Crear, Explorar e Ideas. En Explorar primero se puede observar los proyectos que la gente comparte. De hecho, uno puede ver los proyectos que la gente está haciendo y puede darte unas ideas de lo que tú puedes hacer. De hecho, alguien aquí hizo el juego del dinosaurio cuando no tenemos Internet. Y todo esto está realizado en Scratch.\nLa página de Ideas te da una guía de cosas que tú puedes hacer, y te enseña cómo hacerlo. Por ejemplo, puedes hacer juegos, puedes hacer música, puedes animar, puedes hacer otro juego, y estos te dan ideas de como puedes proseguir y cómo puedes diseñar esto para tu alcanzar este juego.\nTodo esto se puede realizar a través de la página Crear. Lo cliqueamos ahí y esperamos a que se cargue. Si esto está en inglés, se puede cliquear en el globito y se escoge español o español latinoamericano. Una vez aquí, nos encontramos con el editor. En la parte de la izquierda tenemos los bloques que podemos utilizar, aquí hay una ventana de tutorial que se puede cerrar. En la parte de la derecha tenemos la previsualización, en este caso tenemos solamente un rectángulo simple con el gato ahí. Podemos agregar imágenes inclusive, podemos agregar sonidos. Pero aquí lo interesante son los bloques que se tiene.\nSe puede hacer, por ejemplo, en movimiento: mover, girar, girar de un lado, girar del otro. Yo puedo cambiar cuanto tiene que girar, por ejemplo 180 grados, que es media vuelta para atrás. Y para hacer que esto funcione, tenemos que ir a Eventos primero y seleccionar el primer bloque que dice Al Presionar la bandera verde. Este será el primer bloque en todos nuestros programas para hacer que al momento que nosotros cliqueamos la bandera verde aquí, podamos empezar.\nSi le hago clic, se puede ver que se movió un poquito para la derecha, pero también se dio la vuelta, casi la media vuelta. Yo puedo hacer muchas cosas, puedo decirle que se vaya a otro lado. Por ejemplo, Ir a, y las coordenadas, 0, 0. El momento de darle Play, se va al centro. Puedo decirle que vaya al 50 acá y al 50 acá, y se va a mover arriba a la derecha.\nPuedo inclusive decirle, quiero que esto se repita. Le puedo meter todos estos bloques adentro de un bloque que diga Repetir 10 veces, y al momento de darle Play, el gato repite esto 10 veces. Lo hace muy rápido entonces es un poco difícil notar esto, pero el gato lo está repitiendo 10 veces.\nPuedo hacer muchas cosas, puedo hacerle que diga algo, que diga “Hola” por 2 segundos. Dio la vuelta, y dice “Hola”. Y hay algo que se tiene que tomar en cuenta es que el gato está siguiendo las instrucciones que uno mismo le da, y lo está haciendo en el orden que se los está dando. Primero dio las vueltas, repitió las vueltas 10 veces y luego dijo “Hola”.\nPuedo hacer muchas cosas, puedo decir que cambie el disfraz, y el disfraz está basado en esto de los disfraces, entonces, uno tiene estas dos imágenes. Al momento de que yo hago clic aquí dice “Hola” por 2 segundos y luego cambió la imagen. Puedo agregar sonidos, puedo decirle que diga “Miau”, por ejemplo. Termina de decir “Hola”, suena el “Miau” y terminamos con eso.\nTambién van a notar que en la página Web, en las partes de abajo pueden acceder a archivos, y en este caso también vamos a compartir los archivos de Scratch que voy a ir haciendo para mostrar en los videos, para que ustedes mismos los puedan cargar y utilizar. De hecho, cómo se guardan estos archivos, por ejemplo, en este caso yo tengo esta lista de instrucciones que yo quiero guardar para poder utilizar nuevamente. Uno se tiene que ir a la página Archivo y luego Guardar en Tu Computador, y esto descargará un archivo, el cual se encontrará en la carpeta de Descargas.\nPuedo yo inclusive borrar todo esto, para mostrar que sí se guardó. Le puedo dar clic de nuevo a Archivo, Subir desde tu Computador. Selecciono el archivo, le doy clic a Ok, y tengo de vuelta lo que ya tenía antes. Entonces, si es que quieren ustedes utilizar los archivos que voy a ir subiendo en la página, ustedes los pueden descargar y les pueden dar clic en Archivo, Subir desde tu computador, buscan el archivo y tendrán acceso al proyecto.\nHay muchas de las cosas que uno puede hacer, y lo que tú puedes hacer en Scratch está limitado solamente por tu imaginación. En los siguientes videos les voy a explicar para qué sirven cada uno de estos bloques para que ustedes puedan hacer un juego, una animación, un gato con el que puedas conversar. Todo esto es posible a través de la programación.\n"},{"uri":"https://manos-al-codigo.github.io/ejemplos/","title":"Ejemplos","tags":[],"description":"","content":"Ejemplos Esta sección contiene una explicación para los programas ejemplos que se realizaron para que puedan seguir la lógica y entender cómo funcionan.\nContenido de esta sección  Adivinar número   Calculadora   Fecha   "},{"uri":"https://manos-al-codigo.github.io/ejemplos/fecha/","title":"Fecha","tags":[],"description":"","content":"Este es un pequeño ejemplo de como obtener la fecha y presentarla de forma legible para el usuario. El programa es un poco largo pero su funcionamiento es bastante simple. Al final, el gato solamente muestra un mensaje diciendo qué día es hoy.\nCódigo completo   Explicación El proceso de realización de este programa está en orden. Para realizar un programa similar, basta con seguir estos pasos en orden.\nIniciar las variables del año y de la fecha   Para facilitar la creación del mensaje, vamos a guardar en una variable año el valor que la variable especial para el Año Actual. Es decir, en el caso de que sea 2020, la variable año tendrá el valor de 2020.\nAdemás, por razones similares, vamos a guardar en una variable fecha el número del día del mes que es. Este valor lo podemos obtener utilizando la variable especial para la Fecha Actual.\nHasta ahora tenemos las variables fecha y año listas.\nDefinir qué día de la semana es   Para definir qué día de la semana es, debemos realizar algunas comparaciones. Hay que recordar que el bloque de la variable especial de la fecha Día de la Semana Actual es un número que va del 1 al 7 y corresponde a una enumeración de los días de la semana, empezando desde el domingo (1) y terminando con el sábado (7).\nPara esto, utilizaremos 7 bloques de Si y la condición para cada uno de estos bloques será: Verificar que Día de la Semana Actual sea 1, sea 2, sea 3, sea 4, sea 6, sea 6 o sea 7.\n Si Día de la Semana Actual es 1, el día actual es Domingo, entonces guardamos en la variable dia el texto siguiente: Domingo. Si Día de la Semana Actual es 2, el día actual es Lunes, entonces guardamos en la variable dia el texto siguiente: Lunes. Si Día de la Semana Actual es 3, el día actual es Martes, entonces guardamos en la variable dia el texto siguiente: Martes. Si Día de la Semana Actual es 4, el día actual es Miércoles, entonces guardamos en la variable dia el texto siguiente: Miércoles. Si Día de la Semana Actual es 5, el día actual es Jueves, entonces guardamos en la variable dia el texto siguiente: Jueves. Si Día de la Semana Actual es 6, el día actual es Viernes, entonces guardamos en la variable dia el texto siguiente: Viernes. Si Día de la Semana Actual es 7, el día actual es Sábado, entonces guardamos en la variable dia el texto siguiente: Sábado.  Con este proceso hemos preparado la variable dia.\nDefinir qué mes es   Para el encontrar qué mes es, el proceso es bastante similar a lo que se hizo anteriormente para el día de la semana. Hay que recordar que la variable especial de la fecha Mes Actual devuelve un número del 1 al 12 para los números de los meses, empezando con enero (1) y terminando con diciembre (12).\nDe igual manera, utilizaremos 12 bloques de Si para verificar qué número del mes es y asignar a la variable mes el nombre del mes correspondiente.\n Si Mes Actual es 1, el mes actual es Enero, entonces guardamos en la variable mes el texto siguiente: Enero. Si Mes Actual es 2, el mes actual es Febrero, entonces guardamos en la variable mes el texto siguiente: Febrero. Si Mes Actual es 3, el mes actual es Marzo, entonces guardamos en la variable mes el texto siguiente: Marzo. Si Mes Actual es 4, el mes actual es Abril, entonces guardamos en la variable mes el texto siguiente: Abril. Si Mes Actual es 5, el mes actual es Mayo, entonces guardamos en la variable mes el texto siguiente: Mayo. Si Mes Actual es 6, el mes actual es Junio, entonces guardamos en la variable mes el texto siguiente: Junio. Si Mes Actual es 7, el mes actual es Julio, entonces guardamos en la variable mes el texto siguiente: Julio. Si Mes Actual es 8, el mes actual es Agosto, entonces guardamos en la variable mes el texto siguiente: Agosto. Si Mes Actual es 9, el mes actual es Septiembre, entonces guardamos en la variable mes el texto siguiente: Septiembre. Si Mes Actual es 10, el mes actual es Octubre, entonces guardamos en la variable mes el texto siguiente: Octubre. Si Mes Actual es 11, el mes actual es Noviembre, entonces guardamos en la variable mes el texto siguiente: Noviembre. Si Mes Actual es 12, el mes actual es Diciembre, entonces guardamos en la variable mes el texto siguiente: Diciembre.  Con esto hemos preparado la variable mes.\nMostrar la fecha completa   Teniendo listas las variables año, fecha, mes y dia, prepararemos el mensaje de la fecha en una nueva variable llamada frase. El mensaje tendrá la siguiente estructura:\nHoy es dia, fecha de mes del año año.\nHay que recordar que se debe usar el operador de Unir texto para juntar todas estas variables y pedazos de texto para formar la frase final. Puede ser un poco tedioso ya que tenemos que unir bastantes bloques de texto pero como muestra la imagen, el texto final se debería poder leer sin problema.\nTeniendo lista la variable frase, lo único que resta es que el gato diga esta frase, para esto utilizamos el bloque Decir frase.\nCorriendo el programa   El gato muestra un mensaje la fecha completa.     Archivos Adjuntos   Fecha.sb3     "},{"uri":"https://manos-al-codigo.github.io/la-programacion/movimiento-y-apariencia/","title":"Movimiento y apariencia","tags":[],"description":"","content":"   Contenido Hasta ahora solamente he abierto un editor de Scratch, pero si no recuerdan cómo entrar aquí, vayan a la página scratch.mit.edu y hagan clic en crear. Una vez en el editor, pueden cerrar la ventana de tutorial y lo que tenemos entonces son la lista de bloques que podemos utilizar y la previsualización del gatito.\nAntes que nada, hay que recordar que hay que clickear en eventos a la izquierda y arrastrar el bloque que dice Al Presionar la Bandera. Una vez aquí podemos ya utilizar los diferentes bloques. El número 1 es el Mover 10 pasos, podemos cambiar este número de hecho, podemos poner 50 si queremos. Esto hará que el gato se mueva en la dirección que está viendo 50 pasos. Si hago clic en Play, se ve que se movió a la derecha 50 pasos.\nPuedo hacer que el gato gire, voy a remover el botón de mover y solamente voy a poner girar. En este caso, estoy girando en la dirección de las manecillas del reloj 15 grados. Igual si presiono Play, se ve como el gato empieza a girar en esta misma dirección 15 grados cada vez que presione Play.\nPero también hay cómo girar de otro lado, por ejemplo, en el lado contrario. Puedo hacer que gire 90 grados, que es un cuarto de círculo. Pero también puedo decirle que el gato vaya a una posición aleatoria, en este caso. Si hago clic en Play, se va a mover en todas estas direcciones aleatorias. Pero también puedo cambiar esto haciendo clic aquí y darle al Puntero del Ratón. Y ahora el gato va a ir en la dirección del puntero del ratón. Nótese que cómo estoy haciendo clic aquí, el gato siempre trata de ir hacia la bandera.\nPero yo también puedo decirle que vaya a una posición en particular. Estas son las coordenadas, si es que yo pongo 0 en X y 0 en Y, el gato se va a encontrar en el centro. Aquí lo único que hay que tener en cuenta es que las X son de izquierda a derecha y Y son de arriba a abajo. Si pongo un número positivo para el X se va a ir a la derecha, si pongo un número negativo, -50, se va a ir a la izquierda. Si pongo un número positivo en la Y va a ir arriba y si pongo un número negativo en la Y va a ir hacia abajo.\nPero hemos visto que el gato está moviéndose de manera muy rápida y podríamos hacer que el gato se mueva de una forma más lenta para que podamos ver cómo se mueve. Para eso hay que utilizar el bloque que se llama Deslizar. Tenemos dos bloques que dicen Deslizar en 1 Segundo a Posición Aleatoria lo que significa que durante un segundo vamos a poder ver al gato moviéndose, y se va a ir a una dirección aleatoria. Si hago clic en Play podemos ver cómo se mueve en una dirección distinta. Igualmente, de nuevo, y de nuevo, y podemos inclusive decirle que vaya al puntero del ratón.\nPero también podemos utilizar el siguiente bloque que hace que se mueva en la dirección que le digamos. Si ponemos (50; 50), se va a ir hacia arriba a la derecha. Igualmente, podemos hacer que el gato apunte a una cierta dirección, por ejemplo, si hago clic aquí puedo seleccionar la dirección a la que quiero que el gato vea, por ejemplo, a la derecha. Esto hará que el gato siempre esté viendo a la derecha. Puedo hacer que apunte en la dirección del ratón, por ejemplo, aquí.\nPuedo hacer también que el gato cambie su dirección de izquierda a derecha en la cantidad que yo quisiera aquí poner. Por ejemplo, si pongo 50 aquí, se va a ir a la derecha, pero aquí si pongo -50 se va a la izquierda. Puedo también utilizar el botón que dice Fijar X a 50, esto significa que todo el tiempo se va a poner en 50. ¿Y ahora cuál es la diferencia entre Cambiar X en 50 y Fijar X a 50? Si pongo Cambiar X en 50, esto hará que el gato, cada vez que yo presione el botón, vaya 50 pasos a la derecha. Pero en cambio, si yo pongo Fijar X a 50, cada vez que yo presione el botón, siempre va a estar en la posición 50.\nAdemás del Fijar X y Cambiar X, también podemos Cambiar Y y Fijar Y que hace lo mismo, pero de arriba hacia abajo. Puedo hacer clic en Cambiar Y en 10 y se va a ir hacia arriba, o puedo poner Fijar Y a 50 y se va a quedar siempre en 50.\nPero también hay algo muy interesante, yo puedo hacer que el gato se deslice hacia la derecha, voy a poner 300 a la derecha. Vemos que el gato se va muy lejos y de hecho ya no podemos verlo, pero podemos utilizar el botón que dice Rebotar si Toca un Borde para que el gato, al momento que inicie, se rebote contra la pared y cambie de dirección. Para hacer que esto se vea un poquito mejor voy a hacer que el gato siempre inicie en la mitad. Entonces, Fijar X a 0 y Fijar Y a 0. Si le doy clic a Play, vemos que el gato trató de moverse hacia la derecha y luego al momento que llegó se fue a la izquierda porque rebotó.\nTambién podemos inclusive ver cómo cambia la dirección, podemos hacer de izquierda a derecha si es que queremos que el gato cambie su dirección de izquierda a derecha, o podemos hacer que vaya en otra dirección, y vemos que cambia la dirección.\nAhora lo que voy a hacer es que voy a borrar todos estos bloques y voy a hacer que el gato inicie siempre desde la mitad, entonces X igual a 0 y Fijar Y a 0, y quiero que apunte a la derecha. Entonces hago clic aquí y hago 90 para que gire a la derecha. Entonces iniciamos, y aquí es cómo estábamos antes. Voy a hacer que el gato se deslice durante 1 segundo a una posición aleatoria y que rebote si toca un borde, y que el estilo de rotación sea de izquierda a derecha. Le doy a Play todo el tiempo y vemos que el gato siempre inicia desde el medio y va a una dirección distinta.\nEso tenemos hasta ahora para el movimiento, pero ¿Qué tal la apariencia?\nLa apariencia tiene todo que ver con cómo luce el gato. Si arrastramos el botón que dice Decir “Hola” por 2 segundos, al momento que hagamos Play, el gato va a decir “Hola” y se va a quedar el mensaje por 2 segundos. Pero si no nos interesa cuánto tiempo demora el mensaje, podemos utilizar otro bloque que solo dice Decir “Hola”. Yo puedo cambiar el mensaje, puede decir “Chao”. Le doy clic aquí y vemos que el gato dice esto.\nPodemos también inclusive cambiar cómo luce la burbuja del mensaje. Podemos utilizar el botón que dice Pensar para tener otro estilo de burbuja. Igualmente, podemos utilizar el otro botón en el caso en el que no nos interese qué tan largo debería ser el mensaje. Si le doy clic aquí, el mensaje se va a quedar para siempre.\nTambién tenemos el concepto de disfraz, el cual nos permite cambiar cómo luce el personaje. Puedo arrastrar el bloque de cambiar de disfraz, el momento de darle Play, se ve que el gato siempre está cambiado en este nuevo disfraz. Puedo cambiar este por Disfraz 1 y vemos que se cambia. Esto de los disfraces se puede obtener en la parte de arriba a la izquierda en Disfraces, tenemos los 2 disfraces disponibles. Pero, en lugar de tener que definir qué disfraz se tiene que usar, podemos utilizar el bloque que dice Siguiente Disfraz, que, al momento de darle Play, vemos que va cambiando entre sí.\nTambién podemos cambiar el fondo, pero obviamente no tenemos fondos predeterminados, tendríamos que crear uno y subirlo acá. Si le doy clic, no va a pasar nada. Además, de igual forma que para el disfraz, se puede cambiar el fondo definiendo qué fondo se va a escoger o utilizando el fondo siguiente, que va a ser lo mismo.\nTambién puedo cambiar el tamaño del gato, hay el botón que dice Cambiar Tamaño en 10, y cada vez que presione Play, el gato se va a volver más grande en 10%. Puedo poner un número negativo aquí para hacer que se haga más chiquito. Pero también puedo definir el tamaño absoluto, utilizando el bloque de Fijar Tamaño a 100%. Si hago Play aquí, el gato siempre va a estar en su tamaño original. Puedo poner aquí 200% para que el gato sea doblemente grande.\nPuedo también cambiar el efecto, le puedo agregar efectos de: color, ojo de pez, remolino, pixelear, mosaico, todos estos. Si hago clic en Play, vemos que el gato va cambiando de color. Puedo cambiar este valor a 50 y este color cambia. Puedo agregar ojo de pez, puedo agregar remolino, pixelear, mosaico, brillo y desvanecer. También podemos tener la opción de quitar los efectos y cada vez que dé clic en Play, no va a pasar nada porque después de que cambié el efecto, los quité.\nTambién tenemos bloques para mostrar u ocultar el gato. Si es que le doy a ocultar y le doy a Play, el gato desaparece. Si es que pongo mostrar, le doy a Play, el gato vuelve a aparecer. También tenemos el concepto de capa, en el cual, si es que el gato está en la capa de al frente, siempre va a estar visible. Si tenemos un fondo, le pongo en la capa de atrás, el gato puede que desaparezca porque va a estar detrás del fondo.\nPodemos combinar todos estos bloques que hemos visto para hacer algo interesante. Por ejemplo, voy a utilizar todo este bloque que utilizamos al inicio, voy a hacer que diga “Hola” antes de moverse, que piense al final de moverse, y que luego vuelva a moverse al puntero del ratón en 0.5 segundos. Si le doy a Play, vemos que el gato dice “Hola”, se mueve, piensa “Hmm” y se movió a la dirección del puntero.\nEntonces, con todos estos bloques podemos hacer un sinfín de cosas, hasta ahora hemos visto solamente Movimiento y Apariencia, pero hay bastantes, bastantes bloques que podemos utilizar. Más adelante vamos a ver cómo utilizar todos estos bloques para que puedan realizar cosas muy, muy interesantes.\n  Archivos Adjuntos   Movimiento-Apariencia.sb3     "},{"uri":"https://manos-al-codigo.github.io/la-programacion/eventos/","title":"Eventos","tags":[],"description":"","content":"   Contenido Hasta ahora lo único que he hecho fue abrir el editor de Scratch. Esta ventana de tutoriales la puedo cerrar.\nHemos visto hasta ahora con eventos que el que siempre usamos es Al Presionar la Bandera ya que cuando usamos esto podemos utilizar los demás bloques y al momento de clickear en Play, vemos que el código se ejecuta.\nPero yo puedo utilizar otros tipos de eventos para ejecutar código, dependiendo de qué evento sucede. Por ejemplo, en los juegos de video tenemos siempre esta opción de presionar botones, por ejemplo, las flechas, para hacer que el personaje se mueva de derecha a izquierda o de arriba abajo.\nPara eso tenemos este evento que se llama Al Presionar la Tecla, yo puedo poner cuantos quiera de estos. Y al presionar la tecla, yo puedo cambiar el botón que yo quiera utilizar. Utilicemos las flechas, por ejemplo, vamos a utilizar la flecha derecha aquí, y el movimiento voy a hacer que el gato apunte a la dirección de la derecha, y que cambie X, porque recuerden que X corresponde al movimiento de izquierda a derecha, cambie en 10. Lo que significa que cada vez que yo presione la tecla de la derecha, el gato va a moverse hacia la derecha.\nHagamos lo mismo, pero con la flecha izquierda, voy a hacer que el gato apunte a la dirección hacia la izquierda, es decir -90 grados, y vamos a cambiar X en -10. Tiene que ser un número negativo para que vaya a la izquierda.\nPodemos agregar otros más de estos, de hecho, voy a utilizar dos más para las flechas de arriba y la flecha de abajo. Voy a poner que apunte el gato hacia abajo para la flecha abajo, y que apunte hacia arriba para la flecha arriba. Puedo aquí cambiar la Y, porque la Y es el movimiento de arriba a abajo, y si es un número positivo, voy a ir hacia arriba, y un número negativo para ir hacia abajo.\nEntonces, yo tengo mis eventos derecha, izquierda, abajo, arriba, y si es que utilizo los botones de mi teclado, arriba abajo, las flechas, puedo ver que el gato hace justamente este movimiento dependiendo qué botón utilice.\nPuedo hacer muchos tipos de eventos, tipos de movimientos, por ejemplo, al presionar espacio, puedo hacer que el gato trate como que de saltar. Y una manera que puedo hacer esto, es utilizando el botón de Deslizar en 1 Segundo. Voy a cambiar el 1 segundo a 0.3 para que sea un poco rápido. Y como quiero que el gato solo se mueva de arriba abajo, voy a utilizar este bloque especial que dice Posición en X y lo voy a arrastrar a donde dice X en este bloque. Aquí lo único que voy a hacer es cambiar la Y para que diga 10, para que se mueva 10 unidades hacia arriba, y luego voy a deslizar este mismo bloque de nuevo. Le voy a poner 0.3 segundos, voy a volver a arrastrar este Posición en X y voy a cambiar Y en -10. Entonces cada vez que aplaste el botón de espacio, vemos que el gato como que está saltando. Puedo hacerlo que se mueva y luego salta. Eso tenemos para los eventos de presionar teclas.\nPero podemos utilizar otro tipo de eventos, por ejemplo, al hacer clic. Por ejemplo, si es que yo le hago clic al gato, puedo hacerle que diga “Me cliqueaste!”, le hago clic al gato y me dice “Me cliqueaste”. Puedo seguir utilizando los otros eventos al mismo tiempo.\nTambién hay otros eventos, por ejemplo, cuando el volumen del sonido cambie. Esto hace uso del micrófono, y de hecho si es que ustedes utilizan este bloque, es muy probable que su navegador les pida acceder a su micrófono, cuando esto suceda, denle que sí.\nEntonces al momento que yo utilice este bloque, puedo hacer que el gato haga un tipo de acción dependiendo del micrófono mío de mi computadora. Lo que significa que yo puedo hacer que el gato se mueva cuando yo esté hablando. Voy a hacer que piense “Te escuché!” por 2 segundos. Entonces cada vez que yo hable en el micrófono, pueden ver que el gato me está escuchando. Y repite “Te escuché!” cada vez que yo esté utilizando el micrófono.\nTambién podemos utilizar otro tipo de eventos en el que un evento pueda llamar a otro evento. Por ejemplo, tenemos estos bloques especiales que dicen Al Recibir “mensaje1”, Enviar “mensaje1”, Enviar “mensaje1” y Esperar. Con Al Recibir “mensaje1”, yo puedo hacer que el código que esté adentro, por ejemplo, Siguiente Disfraz y que este evento suceda cada vez que el gato termine de escucharme. Entonces puedo utilizar el bloque de Enviar “mensaje1”, al momento que yo esté hablando, estoy haciendo que el evento de Cuando el Volumen del Sonido se ejecute, el momento de que termina de pensar, el código envía el evento “mensaje1” y el “mensaje1” se ejecuta aquí.\nTambién tenemos la opción de Enviar “mensaje1” y Esperar lo que significa que, si yo pongo más bloques debajo de esto, por ejemplo, Mover y Girar, podemos ver que el gato va a hacer las dos cosas al mismo tiempo. Va a enviar el mensaje para que el disfraz cambie, pero también se va a mover los 10 pasos y va a girar justo al mismo tiempo. Utilizando el bloque de Enviar “mensaje1” y Esperar, podemos hacer que el gato, al momento de que envíe el “mensaje1”, pueda completar lo que está en el evento “mensaje1”, y luego de que este código se complete, va a continuar con lo que está abajo.\nEso es todo para lo que son eventos, tenemos muchas opciones en cuanto a cómo ejecutar código, y esto es bastante útil por ejemplo cuando uno quiere hacer un juego. Puedo hacer que el gato se mueva, suba, vaya a la izquierda, baje, salte, y estas son los conceptos muy básicos de un juego. Entonces podemos ver que, con este tipo de cosas, con eventos, podemos hacer juegos muy, muy poderosos.\n  Archivos Adjuntos   Eventos.sb3     "},{"uri":"https://manos-al-codigo.github.io/explorar/","title":"Explorar","tags":[],"description":"","content":"Explorar Esta sección contiene información sobre cómo continuar aprendiendo, se proveen enlaces a recursos externos para aprender los conceptos un poco más complejos de la programación. Los videos mostrados en cada página se encuentran en esta lista de reproducción de YouTube.\nContenido de esta sección  Aprender más   "},{"uri":"https://manos-al-codigo.github.io/la-programacion/operadores/","title":"Operadores","tags":[],"description":"","content":"   Contenido Hasta ahora solo he abierto el editor de Scratch. Esta ventana de tutorial la voy a cerrar. Me voy a dirigir primero a Eventos para coger el evento que siempre usamos, el de Presionar la Bandera Verde. Y luego voy a agregar un Decir “Hola” para poder ver los resultados de las cosas que vamos a utilizar.\nLuego voy a ir a operadores en la parte de la izquierda y voy a utilizar todos estos bloques de aquí. Voy a utilizar la lupa de abajo a la derecha para hacer un poco de zoom para que se pueda leer bien.\nTenemos operadores, por ejemplo, de matemáticas. Si ustedes se acuerdan de cómo funcionan las matemáticas, tienes: la suma, la resta, la multiplicación y la división. Y justamente podemos hacer que Scratch utilice matemáticas. Por ejemplo, aquí, yo puedo insertar dos números en este bloque de Suma. Por ejemplo, el número 20 con el 5. Lo voy a insertar adentro del Decir para que podamos ver el resultado cuando el gato lo diga. 20 + 5 es igual a 25, y si es que yo le doy a la bandera verde, el gato me dice 25. Puedo poner 15 aquí y de ahí puedo poner 15 acá, y la respuesta me va a dar 30.\nEntonces podemos hacer suma, pero también podemos hacer resta. Por ejemplo, 10 – 5 es igual a 5, o 100 – 50 es igual a 50. Tenemos la suma, la resta. Tenemos la multiplicación también. 2 x 3 es igual a 6, al igual que 5 x 5 es igual a 25. Y así también tenemos la división. 25 / 5 es 5.\nPero que tal si yo no quiero hacer solo matemáticas. Hay otros operadores, por ejemplo, Número al Azar. Y este número al azar puede servir bastante cuando uno quiere simular un lanzo de dado. Por ejemplo, un dado solamente tiene 6 lados, y podemos sacar un número del 1 al 6: el 1, el 2, el 3, el 4, el 5 o el 6. Por ejemplo, puedo decir “quiero un número al azar del 1 al 6” y cada vez que dé clic en la bandera, el gato me va a dar un valor distinto que lo escogió al azar.\nY, por ejemplo, todos estos operadores yo los puedo juntar. Por ejemplo, cuando hacemos 15 + 15 salía 30, pero yo puedo hacer, por ejemplo, (15 +15) x 5, me da 150 porque estoy sumando primero el 15 + 15 y luego estoy multiplicando. Como también puedo insertar este de aquí acá. Estoy haciendo 30 x 50 = 1500. Puedo insertar todo este bloque enorme aquí para tener este grandote que me va a dar 300, y puedo inclusive insertar esto de aquí para que lo divida por un número al azar y cada vez que lo de me va a dar un resultado distinto.\nPero eso no es todo, podemos utilizar otros operadores que no funcionan solo con números sino también con palabras. Por ejemplo, Unir “manzana” con “banana”. Cuando uno dice “unir manzana con banana” está pegando las dos palabras, se lo puede ver como una suma, pero con las palabras. Entonces, si yo le doy clic a Play, el gato me va a dar “manzana banana”. Yo puedo agregar otras cosas aquí, por ejemplo, “manzana, pera y” “banana”. Nótese que aquí el “ybanana” está pegado, lo que significa que yo debería poner un espacio después del “y”.\nPero además de unir palabras yo puedo escoger letras de una palabra. Por ejemplo, aquí, la “letra 1 de manzana” es “m”, si le doy a Play me dice solo “m”. ¿En qué se basa esto? Se basa en el hecho que “manzana”, tu le puedes enumerar cada una de las letras. “Manzana” tiene 7 letras, la “m”, la “a”, la “n”, la “z”, la “a”, la “n” y la “a”, 7 letras. Entonces yo puedo escoger, por ejemplo, 5 aquí, y me va a dar la “a”. Puedo escoger el 4 y me va a dar la “z”. ¿Pero qué pasaría si yo pongo un valor mayor a 7? Si pongo por ejemplo 8, no hay una letra 8. El gato simplemente no dice nada porque lo que yo puse no tiene sentido.\nAdemás de ver la letra número tanto, en una palabra, yo puedo ver qué tan larga es una palabra. Acuérdense que yo dije antes que “manzana” tenía 7 letras, veamos si es cierto. Obviamente el gato me dice que es 7 porque “manzana” solo tiene 7 letras. Puedo poner una frase aquí, por ejemplo “hola como estás” y me dice que tiene 15 letras. Toda la longitud de la frase es 15 letras, incluyendo los espacios.\nPero estos no son los únicos operadores, también tenemos operadores que se hacen llamar Booleanos, tienen un nombre un poco raro, pero cómo funcionan es bastante simple. En Scratch los operadores Booleanos que aparecen tienen esta forma puntiaguda, mientras que los otros tienen una forma circular. Los operadores que tienen una forma puntiaguda solamente tienen dos tipos de resultados, Verdadero o Falso. Por ejemplo, cuando uno hace una suma, por ejemplo, 2+2 da 4. O sea que la suma de 2 con 2 da otro número que es 4. Pero para los operadores Booleanos, yo le puedo entregar, dependiendo del operador, un número y otro número, y que me diga si es Verdadero o Falso.\nVeamos estos dos de aquí, voy a hacer un poco más de zoom. Tenemos dos espacios para poner números, por ejemplo, aquí voy a poner el 40, y adentro tenemos un símbolo que parece una flecha. En verdad lo podemos ver como un cocodrilo, al cocodrilo le gusta comer todo lo que es más grande. Este sería la boca del cocodrilo, el cocodrilo está viendo el número 40. Pero, el 40 es menor que el 50, y el cocodrilo le gustaría comer más, ¿no es cierto? Entonces si el 40 es menor que el 50, y el cocodrilo está viendo al 40, me va a dar Falso, o false en inglés, que significa falso. ¿Por qué? Porque el 40 no es mayor que el 50. Si yo pusiera aquí en lugar del 40, yo pondría 60, entonces el gato me va a decir true que significa verdadero en inglés.\nLo mismo sucede con este operador que es lo mismo, pero al revés. Entonces yo puedo comparar aquí el 40 con el 50. El 40 es inferior que el 50, y el cocodrilo está apuntando al 50, entonces todo esto me va a dar Verdadero. Si yo pongo un 60 aquí, que es más grande que el 50, y el cocodrilo no quiere comer menor, me va a decir Falso.\nAdemás de estos dos que ven si el número uno es mayor que el otro, tenemos el de igualdad. Nosotros hemos siempre dicho que 2+2=4, pero eso significa que la suma de 2 con 2 da 4, lo que es igual a 4. Por ejemplo, si es que utilizo este operador aquí, ¿40 = 50? No, no es cierto, y me dice Falso. Pero si yo digo aquí que el 50 = 50, entonces claro, es verdadero. Dándoles el ejemplo que les mencione antes, voy a poner este que es igual a 4, y voy a coger una suma, la voy a insertar aquí, y voy a decir 2+2, lo que siempre hemos hecho en matemáticas, 2+2=4. Esto es verdadero porque 2+2 sí es igual a 4. Pero, por ejemplo, si pongo 2+3 es igual a 4, esto me entrega Falso porque es una mentira.\nAdemás de estos operadores que son Booleanos, tenemos otros que aceptan 2 entradas Booleanas. Vimos que estos yo podía insertar números, pero a este que dice “y”, “o” y “no” se le pueden insertar solo los bloques que son puntiagudos, es decir, los que son o Verdadero o Falso. Yo puedo insertar entonces, uno aquí que diga que el 60 \u0026gt; 50, el 60 \u0026lt; 50. Cuando uno dice “y”, uno está esperando que las dos cosas que estoy diciendo sean verdaderas. Por ejemplo, el día de hoy es domingo 13 de diciembre, si yo digo “hoy es domingo” y “hoy estamos 13”, entonces toda esta frase es verdadera, porque yo dije “hoy es domingo” que es cierto y “hoy es 13” que también es cierto. Pero si yo digo, por ejemplo, “hoy es domingo 12 de diciembre”, entonces no sería verdadero porque bueno, el día de hoy es domingo, pero no estamos 12 de diciembre. Entonces toda esta frase se vuelve una mentira.\nLo mismo es con el “y”, yo puedo pasar una verdad aquí 60 \u0026gt; 50, pero aquí le puse una mentira porque 60 no es menor que 50. Si yo le inserto aquí nos va a decir Falso, porque si bien el primero es cierto, el segundo no lo es. Pero si yo cambio esto para que sea verdadero, por ejemplo, 40 \u0026lt; 50, entonces toda esta frase va a ser verdadera. Entonces, para que “y” sea una verdad, ambas cosas deben ser verdad. Basta con una que sea una mentira para que todo sea una mentira.\nEn cambio, el “o” funciona de una manera un poco distinta. Yo puedo pasar algo que sea verdadero en un lado y algo que sea una mentira en el otro. Y todo me va a salir que es verdadero. Por ejemplo, el ejemplo del domingo 13, hoy es domingo 13 de diciembre, si yo digo “hoy es domingo” o “hoy estamos en enero” todavía sigue siendo verdadero porque el día de hoy es domingo a pesar de que no estemos en enero. Pero si aquí después de las fiestas de año nuevo yo digo, “hoy es domingo u hoy es enero”, entonces igual seguiría verdadero porque después del año nuevo estaríamos en enero. Pero si el día de mañana que es lunes, diría “hoy es domingo u hoy estamos en enero”, no es cierto, porque no es ni domingo y no estaríamos en enero.\nEntonces si yo paso aquí el “o” con 2 cosas que son verdaderas, el 60 \u0026gt; 50 y el 40 \u0026lt; 50, me va a decir Verdadero. Pero con el ejemplo anterior, si yo pongo 60 aquí, el 60 no es inferior al 50, igual me sigue diciendo true. En cambio, si yo digo aquí que el 40 \u0026gt; 50 lo cual es una mentira y que el 60 \u0026lt; 50, lo cual también es una mentira, entonces todo esto es una mentira. Si le digo Play, me entrega Falso.\nEsto me lleva al último operador que dice “no”, y que solo acepta un bloquecito. El “no” convierte lo que es verdadero en falso y lo que es falso en verdadero. Si yo digo “hoy es domingo” es verdadero, si yo pondría “hoy no es domingo” entonces sería falso porque sí estamos domingo. Pero que tal si yo digo “hoy es lunes”, yo se que hoy no es lunes porque hoy es domingo. Si yo digo “hoy no es lunes”, entonces mi frase es la verdad porque hoy estamos domingo, lo cual significa que no estamos lunes.\nVeamos esto con un ejemplo, por ejemplo, el 40 \u0026gt; 50, sabemos que falso. Si yo le doy a Play me va a decir Verdadero porque el 40 no es mayor que el 50. Si yo cambio el 40 por el 60, lo cual yo se que es verdadero porque el 60 sí es mayor que el 50, entonces me dice que es falso porque como lo de adentro era verdad, poniéndole el “no” se vuelve una mentira.\nAdemás de estos de aquí, tenemos uno, el último que voy a hablar el día de hoy que es “manzana” Contiene “a”, esto también es Booleano porque es o verdad o es falso. ¿La palabra “manzana” tiene la letra “a”? Sí, de hecho, tiene 3 de ellas. Si le doy a Play me dice true, pero si yo le cambio esta letra “a” a una “b”, por ejemplo, ¿“manzana” contiene “b”? Esto no es verdadero porque “manzana” no tiene a la letra “b”, le doy a Play y me dice Falso. Yo puedo cambiar la frase de aquí, por ejemplo, puedo poner “banana”. La palabra “banana” sí tiene a la letra “b”. Le doy a Play y me dice que true porque “banana” sí tiene a la letra “b”.\nYo puedo combinar todos estos, por ejemplo ¿“banana” contiene “b”? y ¿” manzana” contiene “a”? Le doy a Play y me dice que sí porque en ambos casos la palabra “banana” tiene “b” y la palabra “manzana” tiene “a”. Basta con que uno de ellos sea falso aquí para que me diga Falso, porque este era el bloque “y”.\nEso ha sido todo por los operadores. Son un poco complicados, hay bastantes opciones que se pueden utilizar, pero basta con conocer su funcionamiento básico para poder desarrollar cosas más complejas. Acuérdense que uno puede combinar cuantos uno quiera, obviamente se vuelve un poco difícil de verlos porque están unos adentro de otros, pero ya cuando uno entiende cómo funcionan por sí solos es que podemos hacer cosas de este estilo.\n  Archivos Adjuntos   Operadores.sb3     "},{"uri":"https://manos-al-codigo.github.io/la-programacion/variables-y-preguntas/","title":"Variables y preguntas","tags":[],"description":"","content":"   Contenido Hasta ahora lo único que hice fue iniciar el editor de Scratch, voy a cerrar la ventana de tutoriales, y como siempre, voy a iniciar el Evento al Presionar la Bandera Verde.\nVoy a hacer clic primero en Variables aquí en la izquierda y voy a notar que hay solo 4 tipos de bloques, pero hay un bloque especial aquí que se llama mi variable que igual lo puedo arrastrar al editor. Una variable se puede imaginar como un lugar donde yo puedo guardar una cierta información para volver a utilizarla luego.\nPor ejemplo, cuando alguien hace 2+2, yo puedo guardar ese resultado en un lugar para poder utilizarlo nuevamente y no tener que volver a calcularlo. Las variables pueden guardar cualquier tipo de información y esto lo podemos utilizar aquí en Scratch.\nEmpezamos entonces con una variable que ya está creada por Scratch que se llama mi variable, si yo quisiera crear una nueva variable puedo clickear en el botón Crear una variable y tengo que darle un nombre. Por ejemplo, llamémosla variable1. Le doy clic en De Acuerdo y ahora tengo mi variable creada. Nótese que aquí hay este botoncito para activarlo o desactivarlo y esto lo que hace es mostrar el valor de la variable aquí arriba en la parte de la izquierda.\nEntonces yo puedo establecer el valor, por ejemplo, utilizo el valor de Establecer variable1 a 2 por ejemplo. La voy a conectar Al Presionar la Bandera y al momento de presionar veo que vale “02”. Puedo ponerle “Hola” y se guarda “Hola”. Para mostrar que esto en verdad se está guardando voy a utilizar el botón que dice Decir “Hola” y en variables voy a arrastrar variable1 en donde dice “Hola” para que diga Decir variable1. Le doy Play y veo que dice “Hola”.\nPero también hay otro tipo de bloque que dice Cambiar mi variable en 1, voy a cambiar mi variable para que sea variable1 y le digo, cuando el momento de que Establecer variable1 sea 10, el valor de variable1 va a ser 10. Pero cambiar va a hacer que esto se sume al valor anterior, si pongo 1, se va a convertir en 11. Vamos a ver, voy a cambiar este bloque de Decir para que diga Decir por 2 segundos, voy a agregar este de nuevo acá, voy a poner Variables, voy a arrastrar variable1, le digo 1 segundo, y voy a conectarlo. Voy a darle Play, y veo que al inicio dice 10 y luego 11. Si yo aquí pongo -2, le doy a Play, veo que dice 10 y luego 8.\nTambién hay los bloques que dicen Mostrar y Ocultar Variable, y lo que hace es exactamente lo mismo a que si yo estuviese clicando aquí. Pero la ventaja es que yo estoy controlando eso a través del código. Entonces, si yo tengo ya mostrada la variable1, yo puedo correr todo esto y que me oculte al final variable1. Corro, va de 10, 8 y luego veo que variable1 desaparece. Puedo igualmente mostrarlo, corro, 10, 8, y vuelve a aparecer.\nEso es todo para los bloques de variables. Vamos a ver otro tipo de bloques que son bastante interesantes que se encuentran en Sensores. Y, esto funciona como hacer preguntas. De hecho, nosotros podemos interactuar con el gato a través de preguntas. Por ejemplo, al Preguntar “¿Cómo te llamas?” y Esperar. Si yo ejecuto esto, el gato me pregunta “¿Cómo te llamas?” y me abre esta caja para yo escribir cosas. Yo puedo escribir mi nombre “Christian”, no hizo nada, porque no está haciendo nada.\nAbajo del bloque de Pregunta hay uno que dice Respuesta, y tiene la misma forma que las que dicen Variables. Es porque Respuesta también es una variable, y de hecho Respuesta va a guardar la información que yo le escriba. En el caso anterior, como dije que mi nombre es “Christian” la respuesta va a valer “Christian”. Hagamos que el gato nos dé un saludo. Por ejemplo, voy a darle clic en Apariencia, que diga Decir Algo, y si se acuerdan de lo de operadores, nosotros podemos unir texto. Voy a unir algo que diga “¡Hola”, el nombre que yo ponga y como en español nos falta el signo de exclamación final, voy a utilizar de nuevo el unir, voy a arrastrar este unir al inicio y voy a poner “!”. Le voy a poner aquí en Decir, le voy a dar a Play, me dice “¿Cómo te llamas?”, me llamo “Christian”, y me dice “¡Hola Christian!”.\nPero esto se ve un poquito feo, que tal si lo guardamos en una variable que se llame “saludo”. Voy a mover esto aquí, voy a ir a Variables, Crear una Variable, “saludo”, De Acuerdo, y yo tengo ahora la variable “saludo”. Voy a hacer entonces que diga la variable “saludo” pero antes de que diga esto, quiero establecer cuánto vale “saludo. Escojo al “saludo”, Establecer, y le pongo este valor acá. Le conecto el bloque de Decir “saludo”, le doy a Play, pongo de nuevo mi nombre, y sale exactamente lo mismo, excepto que lo hicimos con una variable.\nHay otros tipos de preguntas que podemos utilizar, por ejemplo, ¿Está la Tecla Espacio Presionada?, y si recuerdan en la clase anterior, esto es un Booleano, por la forma del bloque. La pregunta ¿Está la Tecla Espacio Presionada?, tiene dos respuestas, Sí y No, Verdadero o Falso. Por ejemplo, voy a utilizar otro tipo de evento para que sea más fácil. Al momento que yo presione la tecla de la flecha de arriba. Voy a hacer que el gato diga si es que la tecla espacio está presionada. Entonces como recuerdan como en los eventos, yo voy a presionar la flecha de arriba y el gato me va a decir si es que la tecla espacio está presionada. En este caso no estaba presionada porque no presioné espacio mientras ejecuté este código. Pero ahora mismo estoy manteniendo espacio y voy a volver a ejecutar este código y ahora dice true porque sí está presionado el botón. Entonces yo puedo cambiar esta tecla por otro tipo de botón.\nPero también hay ¿El Ratón Está Presionado? Voy a mover esto y voy a ponerlo aquí. Ahora mismo no estoy presionando el ratón. Ejecuto y me dice Falso, ahora voy a presionar el ratón, cualquier botón del mouse, pero lo voy a hacer adentro del recuadro en donde se encuentra el gato. Estoy manteniendo, ejecuto, y me dice Verdadero. Ejecuto de nuevo sin presionar y me dice Falso.\nAdemás de las variables que podemos definir nosotros, tenemos otro tipo de variables que se pueden utilizar, por ejemplo, La Posición X del Ratón, yo voy a arrastrar esto aquí para que me diga la posición X del ratón. La Posición X del Ratón solamente va a funcionar si es que estoy encima del recuadro. Entonces voy a estar encima, voy moviendo el mouse, y veo que este valor cambio, si no lo muevo, siempre queda igual. Acordémonos que posición X se refiere de izquierda a derecha. Entonces si yo muevo de izquierda a derecha, veo que este valor cambia bastante. Si muevo de arriba abajo, veo que no cambia mucho porque no estoy moviendo mucho de izquierda a derecha. Tenemos Posición X, Posición Y.\nPero también tenemos otro tipo de variables, por ejemplo, Volumen del Sonido. No sé si recuerdan, pero había un evento que nos permitía correr código cuando utilizábamos nuestro micrófono. Este volumen del sonido es justamente un variable que guarda la información del sonido, voy a ir aplastando el botón de la flecha y van a ver que mientras más hablo, el valor sube. Si dejo de hablar, el valor baja.\nTambién tenemos otro que es bastante útil que es el cronómetro. Le voy a dar aquí y voy a ver que esto dice 228, es porque 228 es la cantidad de segundos que han sucedido desde que empecé a utilizar el editor. Hay un bloque especial que nos dice Reiniciar el Cronómetro, y si es que yo quiero reiniciar el cronómetro, bueno, lo adjunto aquí, vuelvo a ejecutar, y veo que el valor es super pequeño, justamente porque reinicié el cronómetro y vuelvo a mostrar el valor.\nPero además de estas variables, también tenemos las variables de la fecha. Por ejemplo, el que dice Año Actual nos dice qué año es. Voy a presionar la fecha de arriba para ejecutar este código y me dice 2020. Puedo escoger el mes, me dice 12 porque diciembre es el doceavo mes. Le voy a dar a fecha y me dice que hoy es el 14, le doy a día de la semana y me dice que es 2. El día de la semana se cuenta desde el domingo, entonces: domingo, lunes, martes, miércoles, jueves, viernes, sábado. Como hoy es lunes, entonces el día es el número 2. Puedo ver la hora, me dice 2, el minuto, 22, el segundo inclusive, 2, 3, 4…\nEntonces podemos hacer muchas cosas con esto, podemos, como recuerdan antes, podemos unir estas cosas, por ejemplo, voy a utilizar el operador de Unir. Voy a decir que diga la unión entre un mensaje, por ejemplo, “Hoy estamos el “, quiero poner el día, voy a poner acá, voy a poner la fecha. Voy a tener que unir nuevamente esto con otra cosa, y luego “hoy estamos el día del mes “, y voy a agregar otro unir para agregar esto de acá y luego voy a poner el número del mes. Ahora si pongo todo este bloque enorme acá, al momento de yo aplastar arriba, me dice “Hoy estamos el 14 del mes 12”.\nPuedo poner inclusive más cosas, por ejemplo “del año 2020”. Voy a utilizar otro Unir, lo voy a poner al inicio, voy a escribir “del año “, y voy a utilizar otro Unir. Voy a buscar esta variable especial que nos diga el número del año. Voy a ponerlo adentro del bloque de Decir y al momento de presionar la flecha de arriba que ejecuta esto, dice “Hoy estamos el 14 del mes 12 del año 2020”.\nEntonces si recuerdan, yo también puedo guardar todo esto grande en una nueva variable, voy a agregar esto en variables, voy a crear una nueva variable, voy a decir “fecha”. Voy a establecer “fecha” a esto que está aquí, y voy a tomar “fecha” para que diga “fecha”. Presiono la flecha de arriba y dice “Hoy estamos el 14 del mes 12 del año 2020”.\nEntonces hemos visto cómo podemos guardar variables, pero también hemos visto cómo podemos interactuar con el gato. Podemos ver preguntas, podemos ver estas variables especiales, y una última pregunta que vamos a ver cómo funciona es si es que está tocando un color.\nIgualmente, esto es una variable Booleana, es decir, Verdadero o Falso. Y, para esto, voy a crear un nuevo fondo. A la derecha veo Escenarios, Fondos, voy abajo al botón y clickeo en Pintar. Voy a tomar un cuadrado, voy a hacer un cuadrado grande a la derecha, voy a cambiar el color, voy a poner un azul y voy a hacer otro cuadrado así.\nEntonces veo que está como que un fondo que está separado. Voy a regresar al código, voy a clickear en Objecto 1 para tener el código que tenía antes. Y ahora, voy a ir a Eventos, voy a coger un nuevo, esta vez con el botón de espacio, voy a ir a Apariencia a Decir una cosa nueva y Tocando el Color. Yo al clickear aquí puedo seleccionar el color manualmente, pero también puedo utilizar este botoncito que me permite escoger el color. Entonces voy a ver si está tocando el azul, voy a mover un poquito el gato acá y voy a presionar espacio. Me dice Verdadero. Si es que lo muevo a la derecha me va a decir Falso porque ya no está tocando el color azul. Si es que vuelvo a coger acá y cojo el verde, vuelvo a ejecutar esto con espacio y me dice Verdadero. Lo voy a mover de nuevo acá, voy a ejecutar de nuevo y me dice Falso.\nEntonces con todo esto podemos hacer muchísimas cosas, podemos interactuar con el fondo, podemos interactuar con nosotros mismos, con el usuario, podemos hacer preguntas, podemos ver si está tocando un botón en especial, si está tocando el mouse. Podemos ver información de, por ejemplo, qué fecha estamos hoy. Podemos hacer todo este tipo de cosas con las variables y las preguntas.\n  Archivos Adjuntos   Variables-Preguntas.sb3     "},{"uri":"https://manos-al-codigo.github.io/la-programacion/condicionales/","title":"Condicionales","tags":[],"description":"","content":"   Contenido Hasta ahora solo he abierto el editor de Scratch, voy a cerrar la ventana de tutoriales. Como siempre voy a ir a Eventos, agregar el evento de siempre, de la bandera, y voy a ir a Control.\nEn Control vamos a tener varios bloques que podemos usar, pero los que voy a mostrar ahora son el de Si y Si – Si No. Pueden ver que adentro de este bloque tengo la opción de poner más bloques adentro. Pero también puedo poner un bloque puntiagudo aquí, como los Booleanos, el de Verdadero y Falso. Pueden leer esto como si fuese una frase de verdad. Si es que esto es verdad hago esto, en cambio aquí estoy diciendo: Si es que esto es verdad, hago esto, o si no, hago lo otro.\nVamos a poner un ejemplo, voy a ir a Operadores y voy a coger un operador Booleano, por ejemplo, el de igualdad. Por ejemplo, aquí, si el 50 es 50 entonces todo lo que está dentro de aquí se va a ejecutar. Voy a poner esto aquí adentro y voy a poner algo que me muestre que sí está ejecutando, por ejemplo, voy a ir a Apariencia a Decir Algo por 2 Segundos y voy a decir “50 es igual a 50”. Si le doy a Play veo que el gato dice “50 es igual a 50”.\nPero que tal si yo cambio esto para que no sea verdadero, por ejemplo, 13 es igual a 50. Como 13 no es igual a 50, al momento de ejecutar veo que el gato no dice nada. Entonces al momento de utilizar esto, solo si es que la condición que está aquí es real, es verdadero, entonces se ejecuta lo que está adentro. Si no es así, entonces salta. Por ejemplo, voy a poner algo aquí que diga “Terminé” y veo que solo dice “Terminé”, no dijo “50 es igual a 50”.\nEntonces aquí entre el otro bloque, por ejemplo, el Si con Si No, voy a arrastrar este mismo de aquí, lo voy a poner acá, y voy a decir que “50 es igual a 50” por 2 segundos o que diga otra cosa “13 no es igual a 50”. Voy a volver a poner el “Terminé” aquí debajo, le pongo Play y dice “13 no es igual a 50”, “Terminé”.\nPuedo a cambiar esto devuelta a 50 y veo que dice “50 es igual a 50”. Para que la frase de abajo tenga un poco más de sentido, porque si es que yo pongo otro valor, por ejemplo, 25, igual me está diciendo “13 no es igual a 50”. Si recuerdan cómo se podía hacer esto, era a través de variables. Voy a crear una nueva variable que voy a decir “numero”, voy a arrastrar el bloque de Establecer, voy a ponerlo al inicio, quiero la variable “numero” y que cambie a 25.\nVoy a conectar esto y voy a tomar la variable “numero”, la voy a poner aquí porque quiero comparar “numero” con el valor 50, y utilizando los operadores de Unir Palabras, voy a unir la variable “numero” con “no es igual a 50”. Voy a poner esto aquí y al momento de darle Play veo que dice “25 no es igual a 50”. Y si es que pongo 30 aquí, me dice de nuevo “30 no es igual a 50”. En cambio, aquí si pongo 50, me va a decir “50 es igual a 50” porque como yo estuve comparando el valor de “numero” que es 50 con el número 50, el código de arriba se ejecuta porque la condición es verdadera.\nEn cambio, si yo cambio esto a 25 de nuevo, la condición es falsa porque 25 no es igual a 50, entonces se ejecuta lo que está abajo. Tomen en cuenta que ustedes pueden agregar cuantos quieran de estos, pueden agregar uno nuevo acá, pueden agregar adentro cuantos ustedes quieran de estos. Puedo poner más operadores, por ejemplo, “Manzana” contiene “a” y que diga otra cosa que sea, por ejemplo, “Manzana sí contiene a a”. Voy a borrar este que está de más, le voy a dar Play, dice “25 no es igual…” ¿Y por qué no se ejecutó el de aquí? Era porque la condición inicial del “numero” igual a 50 no fue verdadero, entonces todo lo que estaba aquí se ignoró.\nVoy a cambiar la variable de nuevo a 50 para ver que sí se ejecuta, dice “50 es igual a 50” y luego “manzana sí contiene a a”.\nEso es todo sobre lo que trata condicionales. Hay que recordar entonces que, con estos bloques especiales, podemos decidir si una cierta cantidad de código se ejecuta dependiendo de si es que una condición es verdadera o falsa. Tenemos entonces los bloques de Si y los de Si y Si No que son distintos, hacen cosas distintas, pero por detrás es algo muy similar. Estoy observando si es que la condición que le paso es verdadera y al momento de que sea verdadera, va a ejecutar el código de arriba, pero si es que no, va a ejecutar el código del si no.\n  Archivos Adjuntos   Condicionales.sb3     "},{"uri":"https://manos-al-codigo.github.io/la-programacion/repeticion/","title":"Repetición","tags":[],"description":"","content":"   Contenido Ahora mismo solo abrí un editor de Scratch. Voy a cerrar esta ventana de tutorial, vamos a ir a Eventos, utilice el evento de siempre, y me voy a dirigir a Control.\nEn Control tenemos ciertos bloques que nos permiten repetir código, por ejemplo: Repetir con un número, Por Siempre, y Repetir Hasta Que. Voy a comenzar con el Repetir 10, que es el más fácil.\nEsto nos permite repetir bloques de código un cierto número de veces. En este caso 10. Yo puedo cambiar este valor cuantas veces quiera, por ejemplo 50, o 100, pero lo voy a dejar en 10. Para ver cómo funciona, voy a utilizar el movimiento y voy a hacer que vaya a una posición aleatoria. Voy a clickear en Play y veo que el gato se mueve rapidísimo 10 veces. Puedo poner este valor más alto por ejemplo 20 y veo que salta muchas veces.\nY, recuerden, yo puedo agregar cuantos bloques quiera, puedo poner esto, por ejemplo, que gire 90 grados. Lo pongo, y talvez no se si fue difícil de ver, pero mientras cada vez que se movía, el gato estaba girando 90 grados. Eso fue para repetir un cierto número de veces.\nPero que tal si yo quiero que los bloques de código se ejecuten por siempre. Por ejemplo, Ir a Posición Aleatoria Por Siempre, al momento que, de Play, el gato no va a parar de moverse así hasta que yo le diga de parar. Ahora le voy a dar a parar, voy a desconectar este bloque y voy a utilizar el tercero que es Repetir Hasta Que.\nNótese que aquí hay un espacio para poner un bloque y tiene esa forma puntiaguda lo cual nos recuerda a los Booleanos, que son o Verdadero o Falso. Yo puedo hacer que el código se repita hasta que una condición sea verdadera. Voy a hacer que el gato se mueva a una posición aleatoria por siempre, si no hasta que se dé una condición.\nPara mi condición, voy a escoger que el número al azar entre el 1 al 100 sea igual a 50. Eso nos va a dar suficientes repeticiones aleatorias para poder observar estas repeticiones. Voy a arrastrarlo y voy a darle Play y veo que el gato se movió y luego se paró. Tardó más o menos unos 3 segundos, creo yo. Voy a darle de nuevo y veo que esta vez tardó mucho más. Esto podría seguir infinitamente, pero la idea de este bloque de Repetir Hasta Que es repetir los bloques al interior hasta que una cierta condición se cumpla.\nEsas han sido las 3 formas de repetir código. Asegúrense de chequear la siguiente sección en donde hay ejemplos de cosas que se pueden hacer con Scratch en donde pueden ver ejemplos de cómo hacer una calculadora, cómo hacer que el gato les diga la fecha con el día, el mes y el año, y por último un pequeño juego en el que uno tiene que adivinar el número en el que el gato está pensando.\n  Archivos Adjuntos   Repeticion.sb3     "},{"uri":"https://manos-al-codigo.github.io/","title":"","tags":[],"description":"","content":"¿Qué es Manos al Código? Manos al Código es un proyecto de PASEC de la Universidad San Francisco de Quito para la Escuela Fiscal Mixta Fray Jodoco Ricke.\nSe trata de un curso básico para introducir a estudiantes de educación primaria al mundo de la computación a través de conceptos de programación, más específicamente en el lenguaje Scratch, un lenguaje de programación dirigido precisamente a niños en el rango de edad de educación primaria.\n¿Cómo navegar en el sitio? El menú lateral izquierdo contiene el contenido del curso en el orden que se debería seguir. Haciendo click en 1. Introducción le llevará al principio del curso.\nLuego, al hacer click en la flecha que aparece al lado derecho de la pantalla, el sitio lo llevará a la sección siguiente. Cada página del curso contiene un video de YouTube embebido, una versión textual del contenido del video y una lista de archivos pertinentes a la lección (presentaciones PowerPoint, PDFs o archivos de Scratch).\n¿Quién puede hacer uso de este curso? Cualquier persona interesada en aprender conceptos básicos de programación puede utilizar este curso. El curso está dirigido a estudiantes de educación básica, es decir entre 8 y 12 años es el rango de edad que podría aprovechar más el contenido de esta página.\nNota para los instructores Este proyecto es de fuente abierta y su código puede encontrarse en su repositorio público. Además, una guía de edición del sitio puede ser encontrada haciendo click aquí.\n"},{"uri":"https://manos-al-codigo.github.io/categories/","title":"Categories","tags":[],"description":"","content":""},{"uri":"https://manos-al-codigo.github.io/tags/","title":"Tags","tags":[],"description":"","content":""}]