<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Manos al Código</title><link>https://manos-al-codigo.github.io/</link><description>Recent content on Manos al Código</description><generator>Hugo -- gohugo.io</generator><language>es-es</language><atom:link href="https://manos-al-codigo.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Adivinar número</title><link>https://manos-al-codigo.github.io/ejemplos/adivinar-numero/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://manos-al-codigo.github.io/ejemplos/adivinar-numero/</guid><description>Este pequeño juego trata de adivinar el número del 1 al 10 que el gato está pensando. Uno puede insertar un número y el gato le dirá si su número es más grande o más pequeño que el que él está pensando. Finalmente, una vez que se adivina el número el gato le dirá cuantos intentos le tomó hacerlo.
Código completo Explicación El proceso de realización de este programa está en orden.</description></item><item><title>Aprender más</title><link>https://manos-al-codigo.github.io/explorar/aprender-mas/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://manos-al-codigo.github.io/explorar/aprender-mas/</guid><description>Contenido En los videos anteriores aprendimos varias de las cosas que podemos hacer con Scratch, pero hubo algunos bloques que no pudimos utilizar, como los de sonido o los especiales que te dejan crear tus propios bloques. Les dejo que jueguen con ellos para que vean cómo funcionan.
Además, para que el curso sea más fácil, estuvimos programando solo a un objeto a la vez. Pero con Scratch, es posible tener varios objetos en pantalla que sigan sus propias instrucciones.</description></item><item><title>¿Qué es la computación?</title><link>https://manos-al-codigo.github.io/introduccion/que-es-la-computacion/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://manos-al-codigo.github.io/introduccion/que-es-la-computacion/</guid><description>Contenido La computación es la ciencia de las computadoras y estudia su funcionamiento desde lo más adentro hasta lo más de afuera.
Las computadoras de antes nunca fueron tan avanzadas como las que tenemos actualmente, antes ni si quiera tenían pantallas o ratones, tampoco tenían acceso al Internet y uno mismo tenía que programarlas para que puedan servir de algo.
Pero conforme fueron pasando los años, las computadoras se volvieron cada vez más populares, y la gente las compraba cada vez más porque su precio era más barato.</description></item><item><title>¿Qué es un algoritmo?</title><link>https://manos-al-codigo.github.io/la-programacion/que-es-un-algoritmo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://manos-al-codigo.github.io/la-programacion/que-es-un-algoritmo/</guid><description>Contenido Un algoritmo es una serie de instrucciones que se deben de seguir en un orden particular. Por lo general se diseñan algoritmos para solucionar problemas, pero un algoritmo puede ser de cualquier tipo.
Se suele pensar que un algoritmo tiene que estar lleno de matemáticas, pero esto no es del todo cierto. Uno no necesita ser buenísimo en matemáticas para crear un algoritmo. Por ejemplo, una receta de cocina es un algoritmo, aún si esta no necesita nada de matemáticas.</description></item><item><title>Calculadora</title><link>https://manos-al-codigo.github.io/ejemplos/calculadora/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://manos-al-codigo.github.io/ejemplos/calculadora/</guid><description>Este es un pequeño ejemplo de una calculadora que puede hacer las operaciones básicas de suma, resta, multiplicación y división entre solo dos números.
Código completo Explicación El proceso de realización de este programa está en orden. Para realizar un programa similar, basta con seguir estos pasos en orden.
Preguntar por la operación a realizar Al iniciar el programa damos la bienvenida al usuario con el mensaje: ¡Bienvenidos a mi calculadora!</description></item><item><title>Peligros del Internet</title><link>https://manos-al-codigo.github.io/introduccion/peligros-del-internet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://manos-al-codigo.github.io/introduccion/peligros-del-internet/</guid><description>Contenido El Internet es una herramienta bastante útil que nos permite realizar muchísimas actividades de nuestro agrado. Con ella podemos jugar, ver videos, aprender, investigar e incluso hablar con nuestros amigos por texto o llamadas.
Pero, en el Internet nadie se conoce y esto es un problema porque esto significa que, en el Internet, la gente puede hacer lo que quiera sin que los otros puedan darse cuenta.</description></item><item><title>Scratch</title><link>https://manos-al-codigo.github.io/la-programacion/scratch/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://manos-al-codigo.github.io/la-programacion/scratch/</guid><description>Contenido Scratch es un lenguaje de programación diseñado por la Universidad MIT en Estados Unidos. Está hecho para hacer que los niños se interesen por la programación. Es un lenguaje bastante simple, no tiene nada de complicado, uno no tiene que estar escribiendo cosas, sino que se usan bloques.
Primeramente, cómo acceder a esto. Uno puede abrir Google, y buscar Scratch. Y de hecho el primer link usualmente va a ser el correcto.</description></item><item><title>Fecha</title><link>https://manos-al-codigo.github.io/ejemplos/fecha/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://manos-al-codigo.github.io/ejemplos/fecha/</guid><description>Este es un pequeño ejemplo de como obtener la fecha y presentarla de forma legible para el usuario. El programa es un poco largo pero su funcionamiento es bastante simple. Al final, el gato solamente muestra un mensaje diciendo qué día es hoy.
Código completo Explicación El proceso de realización de este programa está en orden. Para realizar un programa similar, basta con seguir estos pasos en orden.</description></item><item><title>Movimiento y apariencia</title><link>https://manos-al-codigo.github.io/la-programacion/movimiento-y-apariencia/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://manos-al-codigo.github.io/la-programacion/movimiento-y-apariencia/</guid><description>Contenido Hasta ahora solamente he abierto un editor de Scratch, pero si no recuerdan cómo entrar aquí, vayan a la página scratch.mit.edu y hagan clic en crear. Una vez en el editor, pueden cerrar la ventana de tutorial y lo que tenemos entonces son la lista de bloques que podemos utilizar y la previsualización del gatito.
Antes que nada, hay que recordar que hay que clickear en eventos a la izquierda y arrastrar el bloque que dice Al Presionar la Bandera.</description></item><item><title>Eventos</title><link>https://manos-al-codigo.github.io/la-programacion/eventos/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://manos-al-codigo.github.io/la-programacion/eventos/</guid><description>Contenido Hasta ahora lo único que he hecho fue abrir el editor de Scratch. Esta ventana de tutoriales la puedo cerrar.
Hemos visto hasta ahora con eventos que el que siempre usamos es Al Presionar la Bandera ya que cuando usamos esto podemos utilizar los demás bloques y al momento de clickear en Play, vemos que el código se ejecuta.
Pero yo puedo utilizar otros tipos de eventos para ejecutar código, dependiendo de qué evento sucede.</description></item><item><title>Operadores</title><link>https://manos-al-codigo.github.io/la-programacion/operadores/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://manos-al-codigo.github.io/la-programacion/operadores/</guid><description>Contenido Hasta ahora solo he abierto el editor de Scratch. Esta ventana de tutorial la voy a cerrar. Me voy a dirigir primero a Eventos para coger el evento que siempre usamos, el de Presionar la Bandera Verde. Y luego voy a agregar un Decir “Hola” para poder ver los resultados de las cosas que vamos a utilizar.
Luego voy a ir a operadores en la parte de la izquierda y voy a utilizar todos estos bloques de aquí.</description></item><item><title>Variables y preguntas</title><link>https://manos-al-codigo.github.io/la-programacion/variables-y-preguntas/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://manos-al-codigo.github.io/la-programacion/variables-y-preguntas/</guid><description>Contenido Hasta ahora lo único que hice fue iniciar el editor de Scratch, voy a cerrar la ventana de tutoriales, y como siempre, voy a iniciar el Evento al Presionar la Bandera Verde.
Voy a hacer clic primero en Variables aquí en la izquierda y voy a notar que hay solo 4 tipos de bloques, pero hay un bloque especial aquí que se llama mi variable que igual lo puedo arrastrar al editor.</description></item><item><title>Condicionales</title><link>https://manos-al-codigo.github.io/la-programacion/condicionales/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://manos-al-codigo.github.io/la-programacion/condicionales/</guid><description>Contenido Hasta ahora solo he abierto el editor de Scratch, voy a cerrar la ventana de tutoriales. Como siempre voy a ir a Eventos, agregar el evento de siempre, de la bandera, y voy a ir a Control.
En Control vamos a tener varios bloques que podemos usar, pero los que voy a mostrar ahora son el de Si y Si – Si No. Pueden ver que adentro de este bloque tengo la opción de poner más bloques adentro.</description></item><item><title>Repetición</title><link>https://manos-al-codigo.github.io/la-programacion/repeticion/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://manos-al-codigo.github.io/la-programacion/repeticion/</guid><description>Contenido Ahora mismo solo abrí un editor de Scratch. Voy a cerrar esta ventana de tutorial, vamos a ir a Eventos, utilice el evento de siempre, y me voy a dirigir a Control.
En Control tenemos ciertos bloques que nos permiten repetir código, por ejemplo: Repetir con un número, Por Siempre, y Repetir Hasta Que. Voy a comenzar con el Repetir 10, que es el más fácil.</description></item></channel></rss>